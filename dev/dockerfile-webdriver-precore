# Use the latest official Ubuntu image as a base
FROM ghcr.io/pyrethrum/haskell:latest

# use
# docker build -t "pyrethrum" .
# docker tag pyrethrum theghostjw/pyrethrum:latest
# docker push theghostjw/pyrethrum:latest

# vscode user created in haskell
ENV DEBIAN_FRONTEND=noninteractive \
    USERNAME=vscode \
    # modified from https://github.com/vzarytovskii/haskell-dev-env/blob/master/.devcontainer/Dockerfile 
    # this 1000 is already taken by ubuntu
    USER_UID=1001 \
    USER_GID=1001
    
    # ensure switched user
    USER ${USER_UID}:${USER_GID}
    
    # Set the working directory
    WORKDIR /home/vscode
    
ARG REPO=https://github.com/pyrethrum/webdriver.git
ARG BRANCH=main

    
# Ensure the vscode user has ownership of its home directory
RUN chown -R ${USER_UID}:${USER_GID} /home/${USERNAME}

# Sadly this has to all be in a single RUN command so REPO_DIR can be used
# Docker does not directly support storing command output in variables within a Dockerfile as you might in a shell script. 
# The example combines commands using && to ensure they are executed in the same shell, 
# allowing the use of the variable ${REPO_DIR} within the scope of that RUN command.

# calculate local repo dir
RUN REPO_DIR=$(basename -s .git "${REPO}") \
    # clone into home (note single branch)
    && git clone --single-branch --branch ${BRANCH} ${REPO} \
    # cd into source repo
    && cd "${REPO_DIR}/webdriver-precore" \
    # build it all (go have coffee for an hour or more)
    # libraries will be cached by cabal
    # local modules => dist-newstyle
    && cabal update \
    && cabal build  --only-dependencies \
    && echo "working directory is ${PWD}" \
    # cd back into examples
    && cd .. \
    && echo "working directory after cd out ${PWD}" \
    && cd "webdriver-examples" \
    && cabal build  --only-dependencies --enable-tests \
    # local copy module build artifacts to home dir
    # note this does not work cabal is too clever with its cach invalidation
    # && cp -r ./dist-newstyle /home/vscode/dist-newstyle \
    # CD out
    && cd .. \
    # delete the repo
    && rm -rf "${REPO_DIR}"


# Install Firefox by running the install script
COPY install-firefox.sh /home/vscode/install-firefox.sh
USER root
RUN echo "Install firefox" && \
    # chown ${USER_UID}:${USER_GID} /home/vscode/install-firefox.sh && \
    # ls -l /home/vscode/install-firefox.sh && \
    chmod +x /home/vscode/install-firefox.sh && \
    /home/vscode/install-firefox.sh && \
    rm /home/vscode/install-firefox.sh

# Install geckodriver by running the install script
COPY install-gecko-driver.sh /home/vscode/install-gecko-driver.sh
RUN echo "Install geckodriver" && \
    chmod +x /home/vscode/install-gecko-driver.sh && \
    /home/vscode/install-gecko-driver.sh && \ 
    rm /home/vscode/install-gecko-driver.sh
USER ${USER_UID}:${USER_GID}

# Specify the default command to run when the container starts
CMD ["bash"]